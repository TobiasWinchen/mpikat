stages:
  - test
  - deploy

image: edd01:5000/eddbase:latest


.production:
  image: edd01:5000/eddbase
  before_script:
    - apt-get -y update && apt-get install -y python-ipaddress python-coverage

.python3:
  image: nvidia/cuda:10.2-devel-ubuntu18.04
  before_script:
    - apt-get -y update && apt-get install -y python3-pip  python3-git python3-watchdog python3-networkx python3-astropy python3-pybind11 git libboost-program-options-dev libboost-system-dev python3-graphviz
    - pip3 install katcp redis coloredlogs numpy spead2==1.14.0



test_production_base:
  stage: test
  extends: .production
  script:
    - python-coverage run  -p --omit "*/site-packages/*,*test*" --source="mpikat" test.py
  only:
    - pushes
    - merge_requests
  artifacts:
    untracked: true
    when: always

test_python3:
  stage: test
  extends: .python3
  script:
    - python3 test.py
  only:
    - pushes
    - merge_requests



test_production_gated:
  image: edd01:5000/edd_gated_stokes
  extends: .production
  stage: test
  script:
    - cp testing_tools/dummy_numa_ctl.py /usr/bin/numactl
    - rm -r /usr/local/lib/python2.7/dist-packages/mpikat-0.1-py2.7.egg/
    - cp mpikat/effelsberg/edd/pipeline/test/testGatedPipeline.py .
    - python-coverage run -p --omit "*/site-packages/*,*test*" --source="mpikat" testGatedPipeline.py
  only:
    - pushes
    - merge_requests
  artifacts:
    untracked: true
    when: always


    #test_coverage:
    #  stage: deploy
    #  dependencies:
    #    - test_production_gated
    #    - test_production_base
    #  script:
    #    - python2-coverage xml
    #  artifacts:
    #    reports:
    #      cobertura: coverage.xml
    #  when: on_success


test_debug_output:
  stage: deploy
  script:
    - cat debug.log
  when: on_failure


make_doc:
  stage: test
  extends: .python3

  script:
    - pip3 install sphinx sphinxcontrib-apidoc sphinx-rtd-theme sphinx-autodocgen recommonmark  sphinxcontrib-napoleon sphinx-autodoc
    - cd doc
    - make html


pages:
  stage: deploy
  extends: .production
  dependencies:
    - test_production_gated
    - test_production_base
    - make_doc
  script:
    - ls -a
    - python-coverage combine .coverage*
    - ls -a
    - python-coverage html
    - python-coverage report
    - mkdir public
    - mv htmlcov/ public/coverage
    - mv doc/_build/html/* public/
  artifacts:
    paths:
      - public
  only:
    - dev
    - cicd
    - doc
